name: Validar PRs de Assinaturas

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate-json:
    runs-on: ubuntu-latest
    name: Validar estrutura e alterações do members.json
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Instalar dependências
        run: npm install jsonlint --global

      - name: Verificar arquivos modificados
        id: files
        run: |
          echo "::group::Arquivos modificados"
          git fetch --unshallow origin main || git fetch origin main
          FILES=$(git diff --name-only origin/main...HEAD || echo "")
          echo "$FILES"
          echo "::endgroup::"
          echo "FILES<<EOF" >> $GITHUB_ENV
          echo "$FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Validar que apenas members.json foi alterado
        run: |
          echo "$FILES" | grep -q '^members.json$' || {
            echo "❌ Apenas o arquivo members.json deve ser alterado." >&2
            exit 1
          }

      - name: Validar que o JSON está bem formado
        run: |
          jsonlint members.json -q

      - name: Garantir que nenhuma entrada foi removida
        run: |
          git fetch origin main
          git checkout origin/main -- members.json
          mv members.json data.main.json
          git checkout $GITHUB_HEAD_REF -- members.json
          mv members.json data.pr.json

          ADDED=$(jq --slurp '.[1] - .[0]' data.main.json data.pr.json)
          REMOVED=$(jq --slurp '.[0] - .[1]' data.main.json data.pr.json)

          echo "Entradas adicionadas: $ADDED"
          echo "Entradas removidas: $REMOVED"

          if [ "$(echo $REMOVED | jq 'length')" -gt 0 ]; then
            echo "❌ Entradas foram removidas do JSON. Revisão manual necessária." >&2
            exit 1
          fi

  auto-merge:
    needs: validate-json
    if: ${{ success() && github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Merge automático de PR válido
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const result = await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              merge_method: 'squash'
            });
            if (result.status === 200) {
              console.log(`✅ PR #${pr.number} mergeado automaticamente.`);
            } else {
              console.log(`❌ Falha ao fazer merge automático.`);
            }
